{"version":3,"file":"author-control.min.js","sources":["../src/element.js"],"sourcesContent":["class AuthorFormControlElement extends AuthorBaseElement(HTMLElement) {\n  constructor () {\n    super(`{{TEMPLATE-STRING}}`)\n\n    this.UTIL.defineAttributes({\n      type: ''\n    })\n\n    this.UTIL.defineProperties({\n      initialized: {\n        private: true,\n        default: false\n      },\n\n      initialValue: {\n        default: null\n      },\n\n      labels: {\n        readonly: true,\n        get: () => this.PRIVATE.labelElements\n      },\n\n      labelElements: {\n        private: true,\n        default: []\n      },\n\n      datalist: {\n        readonly: true,\n        get: () => this.PRIVATE.datalistElement\n      },\n\n      datalistElement: {\n        private: true,\n        default: null\n      },\n\n      datalistSourceElement: {\n        private: true,\n        default: null\n      },\n\n      input: {\n        readonly: true,\n        get: () => this.PRIVATE.inputElement\n      },\n\n      inputElement: {\n        private: true,\n        default: null\n      },\n\n      inputSourceElement: {\n        private: true,\n        default: null\n      },\n\n      fieldInputTypes: {\n        readonly: true,\n        private: true,\n        default: [\n          'color',\n          'date',\n          'datetime-local',\n          'email',\n          'file',\n          'hidden',\n          'image',\n          'month',\n          'number',\n          'password',\n          'range',\n          'reset',\n          'search',\n          'submit',\n          'tel',\n          'text',\n          'time',\n          'url',\n          'week',\n          'textarea'\n        ]\n      },\n\n      toggleInputTypes: {\n        readonly: true,\n        private: true,\n        default: [\n          'checkbox',\n          'radio'\n        ],\n      },\n\n      supportedTypes: {\n        readonly: true,\n        private: true,\n        default: [\n          'field',\n          'toggle',\n          'select'\n        ]\n      }\n    })\n\n    this.UTIL.definePrivateMethods({\n      catalogChild: node => {\n        switch (node.nodeName) {\n          case 'LABEL':\n            node.htmlFor = this.PRIVATE.guid\n            this.PRIVATE.labelElements.push(node)\n            return\n\n          case 'INPUT':\n          case 'TEXTAREA':\n            node.id = this.PRIVATE.guid\n            this.PRIVATE.inputSourceElement = node\n            return\n\n          case 'SELECT':\n            this.PRIVATE.inputSourceElement = node\n            return\n\n          case 'DATALIST':\n            this.PRIVATE.datalistSourceElement = node\n            return\n\n          default: if (node.children.length > 0) {\n            Array.from(node.children).forEach(child => this.PRIVATE.catalogChild(child))\n          }\n        }\n      },\n\n      init: () => {\n        this.initialValue = this.PRIVATE.inputSourceElement.value\n\n        switch (this.PRIVATE.inputSourceElement.nodeName) {\n          case 'INPUT':\n            this.PRIVATE.inputElement = this.PRIVATE.inputSourceElement\n\n            if (this.PRIVATE.datalistSourceElement) {\n              this.type = 'datalist'\n\n              if (!customElements.get('author-datalist')) {\n                this.PRIVATE.initDefaultDatalist()\n                break\n              }\n\n              this.PRIVATE.initAuthorDatalist()\n              break\n            }\n\n            if (this.PRIVATE.fieldInputTypes.indexOf(this.PRIVATE.inputElement.type) >= 0) {\n              this.type = 'field'\n              break\n            }\n\n            if (this.PRIVATE.toggleInputTypes.indexOf(this.PRIVATE.inputElement.type) >= 0) {\n              this.type = 'toggle'\n              break\n            }\n\n            break\n\n          case 'TEXTAREA':\n            this.PRIVATE.inputElement = this.PRIVATE.inputSourceElement\n            this.type = 'textarea'\n            break\n\n          case 'SELECT':\n            this.type = 'select'\n\n            if (!customElements.get('author-select')) {\n              this.PRIVATE.initDefaultSelect()\n              break\n            }\n\n            this.PRIVATE.initAuthorSelect()\n            break\n        }\n\n        this.UTIL.registerListener(this.input, 'invalid', evt => this.emit('invalid', {}))\n\n        switch (this.type) {\n          case 'input':\n          case 'textarea':\n            // this.UTIL.defineProperties({\n            //   leng\n            // })\n\n            break\n\n          case 'select':\n          case 'datalist':\n            this.UTIL.defineProperties({\n              length: {\n                readonly: true,\n                get: () => this.input.length\n              },\n\n              selectedIndex: {\n                set: value => this.input.selectedIndex = value,\n                get: () => this.input.selectedIndex\n              }\n            })\n\n            ;[\n              'add',\n              'deselectAll',\n              'addFilter',\n              'hasFilter',\n              'removeAllFilters',\n              'removeFilter',\n              'item',\n              'namedItem',\n              'remove',\n              'reportValidity',\n              'setCustomValidity'\n            ].forEach(method => this[method] = (...args) => this.input[method](...args))\n\n            break\n        }\n\n        this.PRIVATE.initialized = true\n        this.emit('initialized')\n      },\n\n      initAuthorDatalist: () => {\n        let { datalistSourceElement, inputElement, guid } = this.PRIVATE\n\n        let authorDatalist = document.createElement('author-datalist')\n\n        Array.from(datalistSourceElement.attributes).forEach(attr => {\n          if (attr.specified) {\n            authorDatalist.setAttribute(attr.name, attr.value)\n\n            if (attr.name === 'autofocus') {\n              datalistSourceElement.removeAttribute(attr.name)\n            }\n          }\n        })\n\n        this.removeChild(inputElement)\n\n        // Use a select as sourceElement to preserve option indexes, since\n        // datalist doesn't assign indexes to child options\n        let surrogate = document.createElement('select')\n        Array.from(datalistSourceElement.children).forEach(option => surrogate.add(option))\n        surrogate.selectedIndex = -1\n\n        authorDatalist.inject(inputElement, surrogate, guid)\n        this.replaceChild(authorDatalist, datalistSourceElement)\n        this.PRIVATE.inputElement = authorDatalist\n      },\n\n      initDefaultDatalist: () => {\n        let { datalistSourceElement, inputElement, guid } = this.PRIVATE\n\n        datalistSourceElement.id = `${guid}_datalist`\n        inputElement.setAttribute('list', datalistSourceElement.id)\n\n        this.PRIVATE.datalistElement = datalistSourceElement\n      },\n\n      initDefaultSelect: () => {\n        let { inputSourceElement } = this.PRIVATE\n\n        inputSourceElement.id = this.PRIVATE.guid\n        inputSourceElement.setAttribute('role', 'menu')\n\n        this.PRIVATE.inputElement = inputSourceElement\n      },\n\n      initAuthorSelect: () => {\n        let { inputSourceElement } = this.PRIVATE\n        let authorSelect = document.createElement('author-select')\n\n        authorSelect.id = this.PRIVATE.guid\n\n        Array.from(inputSourceElement.attributes).forEach(attr => {\n          if (attr.specified) {\n            authorSelect.setAttribute(attr.name, attr.value)\n\n            if (attr.name === 'autofocus') {\n              inputSourceElement.removeAttribute(attr.name)\n            }\n          }\n        })\n\n        authorSelect.inject(inputSourceElement, this.labels)\n\n        this.replaceChild(authorSelect, inputSourceElement)\n        this.PRIVATE.inputElement = authorSelect\n\n        // This is required for label clicks to focus author-select\n        this.labels.forEach(label => {\n          this.UTIL.registerListener(label, 'click', evt => this.PRIVATE.inputElement.focus())\n        })\n      }\n    })\n\n    this.UTIL.registerListeners(this, {\n      connected: () => this.PRIVATE.guid = this.UTIL.generateGuid('control_'),\n      rendered: () => {\n        Array.from(this.children).forEach(child => this.PRIVATE.catalogChild(child))\n        this.PRIVATE.init()\n      }\n    })\n  }\n\n  static get observedAttributes () {\n    return ['disabled']\n  }\n\n  get value () {\n    return this.input.value\n  }\n\n  set value (value) {\n    this.input.value = value\n  }\n\n  blur () {\n    this.input.blur()\n  }\n\n  checkValidity () {\n    this.input.checkValidity()\n  }\n\n  clear () {\n    if ('clear' in this.input) {\n      return this.input.clear()\n    }\n\n    this.input.value = ''\n  }\n\n  focus () {\n    this.input.focus()\n  }\n}\n\ncustomElements.define('author-control', AuthorFormControlElement)\n\nexport default AuthorFormControlElement\n"],"names":["AuthorFormControlElement","AuthorBaseElement","HTMLElement","[object Object]","super","this","UTIL","defineAttributes","type","defineProperties","initialized","private","default","initialValue","labels","readonly","get","PRIVATE","labelElements","datalist","datalistElement","datalistSourceElement","input","inputElement","inputSourceElement","fieldInputTypes","toggleInputTypes","supportedTypes","definePrivateMethods","catalogChild","node","nodeName","htmlFor","guid","push","id","children","length","Array","from","forEach","child","init","value","customElements","initDefaultDatalist","initAuthorDatalist","indexOf","initDefaultSelect","initAuthorSelect","registerListener","evt","emit","selectedIndex","set","method","args","authorDatalist","document","createElement","attributes","attr","specified","setAttribute","name","removeAttribute","removeChild","surrogate","option","add","inject","replaceChild","authorSelect","label","focus","registerListeners","connected","generateGuid","rendered","observedAttributes","blur","checkValidity","clear","define"],"mappings":"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"}