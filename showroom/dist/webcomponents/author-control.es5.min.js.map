{"version":3,"file":"author-control.es5.min.js","sources":["../src/element.js"],"sourcesContent":["class AuthorFormControlElement extends AuthorBaseElement(HTMLElement) {\n  constructor () {\n    super(`{{TEMPLATE-STRING}}`)\n\n    this.UTIL.defineAttributes({\n      type: ''\n    })\n\n    this.UTIL.defineProperties({\n      initialized: {\n        private: true,\n        default: false\n      },\n\n      initialValue: {\n        default: null\n      },\n\n      labels: {\n        readonly: true,\n        get: () => this.PRIVATE.labelElements\n      },\n\n      labelElements: {\n        private: true,\n        default: []\n      },\n\n      datalist: {\n        readonly: true,\n        get: () => this.PRIVATE.datalistElement\n      },\n\n      datalistElement: {\n        private: true,\n        default: null\n      },\n\n      datalistSourceElement: {\n        private: true,\n        default: null\n      },\n\n      input: {\n        readonly: true,\n        get: () => this.PRIVATE.inputElement\n      },\n\n      inputElement: {\n        private: true,\n        default: null\n      },\n\n      inputSourceElement: {\n        private: true,\n        default: null\n      },\n\n      fieldInputTypes: {\n        readonly: true,\n        private: true,\n        default: [\n          'color',\n          'date',\n          'datetime-local',\n          'email',\n          'file',\n          'hidden',\n          'image',\n          'month',\n          'number',\n          'password',\n          'range',\n          'reset',\n          'search',\n          'submit',\n          'tel',\n          'text',\n          'time',\n          'url',\n          'week',\n          'textarea'\n        ]\n      },\n\n      toggleInputTypes: {\n        readonly: true,\n        private: true,\n        default: [\n          'checkbox',\n          'radio'\n        ],\n      },\n\n      supportedTypes: {\n        readonly: true,\n        private: true,\n        default: [\n          'field',\n          'toggle',\n          'select'\n        ]\n      }\n    })\n\n    this.UTIL.definePrivateMethods({\n      catalogChild: node => {\n        switch (node.nodeName) {\n          case 'LABEL':\n            node.htmlFor = this.PRIVATE.guid\n            this.PRIVATE.labelElements.push(node)\n            return\n\n          case 'INPUT':\n          case 'TEXTAREA':\n            node.id = this.PRIVATE.guid\n            this.PRIVATE.inputSourceElement = node\n            return\n\n          case 'SELECT':\n            this.PRIVATE.inputSourceElement = node\n            return\n\n          case 'DATALIST':\n            this.PRIVATE.datalistSourceElement = node\n            return\n\n          default: if (node.children.length > 0) {\n            Array.from(node.children).forEach(child => this.PRIVATE.catalogChild(child))\n          }\n        }\n      },\n\n      init: () => {\n        this.initialValue = this.PRIVATE.inputSourceElement.value\n\n        switch (this.PRIVATE.inputSourceElement.nodeName) {\n          case 'INPUT':\n            this.PRIVATE.inputElement = this.PRIVATE.inputSourceElement\n\n            if (this.PRIVATE.datalistSourceElement) {\n              this.type = 'datalist'\n\n              if (!customElements.get('author-datalist')) {\n                this.PRIVATE.initDefaultDatalist()\n                break\n              }\n\n              this.PRIVATE.initAuthorDatalist()\n              break\n            }\n\n            if (this.PRIVATE.fieldInputTypes.indexOf(this.PRIVATE.inputElement.type) >= 0) {\n              this.type = 'field'\n              break\n            }\n\n            if (this.PRIVATE.toggleInputTypes.indexOf(this.PRIVATE.inputElement.type) >= 0) {\n              this.type = 'toggle'\n              break\n            }\n\n            break\n\n          case 'TEXTAREA':\n            this.PRIVATE.inputElement = this.PRIVATE.inputSourceElement\n            this.type = 'textarea'\n            break\n\n          case 'SELECT':\n            this.type = 'select'\n\n            if (!customElements.get('author-select')) {\n              this.PRIVATE.initDefaultSelect()\n              break\n            }\n\n            this.PRIVATE.initAuthorSelect()\n            break\n        }\n\n        this.UTIL.registerListener(this.input, 'invalid', evt => this.emit('invalid', {}))\n\n        switch (this.type) {\n          case 'input':\n          case 'textarea':\n            // this.UTIL.defineProperties({\n            //   leng\n            // })\n\n            break\n\n          case 'select':\n          case 'datalist':\n            this.UTIL.defineProperties({\n              length: {\n                readonly: true,\n                get: () => this.input.length\n              },\n\n              selectedIndex: {\n                set: value => this.input.selectedIndex = value,\n                get: () => this.input.selectedIndex\n              }\n            })\n\n            ;[\n              'add',\n              'deselectAll',\n              'addFilter',\n              'hasFilter',\n              'removeAllFilters',\n              'removeFilter',\n              'item',\n              'namedItem',\n              'remove',\n              'reportValidity',\n              'setCustomValidity'\n            ].forEach(method => this[method] = (...args) => this.input[method](...args))\n\n            break\n        }\n\n        this.PRIVATE.initialized = true\n        this.emit('initialized')\n      },\n\n      initAuthorDatalist: () => {\n        let { datalistSourceElement, inputElement, guid } = this.PRIVATE\n\n        let authorDatalist = document.createElement('author-datalist')\n\n        Array.from(datalistSourceElement.attributes).forEach(attr => {\n          if (attr.specified) {\n            authorDatalist.setAttribute(attr.name, attr.value)\n\n            if (attr.name === 'autofocus') {\n              datalistSourceElement.removeAttribute(attr.name)\n            }\n          }\n        })\n\n        this.removeChild(inputElement)\n\n        // Use a select as sourceElement to preserve option indexes, since\n        // datalist doesn't assign indexes to child options\n        let surrogate = document.createElement('select')\n        Array.from(datalistSourceElement.children).forEach(option => surrogate.add(option))\n        surrogate.selectedIndex = -1\n\n        authorDatalist.inject(inputElement, surrogate, guid)\n        this.replaceChild(authorDatalist, datalistSourceElement)\n        this.PRIVATE.inputElement = authorDatalist\n      },\n\n      initDefaultDatalist: () => {\n        let { datalistSourceElement, inputElement, guid } = this.PRIVATE\n\n        datalistSourceElement.id = `${guid}_datalist`\n        inputElement.setAttribute('list', datalistSourceElement.id)\n\n        this.PRIVATE.datalistElement = datalistSourceElement\n      },\n\n      initDefaultSelect: () => {\n        let { inputSourceElement } = this.PRIVATE\n\n        inputSourceElement.id = this.PRIVATE.guid\n        inputSourceElement.setAttribute('role', 'menu')\n\n        this.PRIVATE.inputElement = inputSourceElement\n      },\n\n      initAuthorSelect: () => {\n        let { inputSourceElement } = this.PRIVATE\n        let authorSelect = document.createElement('author-select')\n\n        authorSelect.id = this.PRIVATE.guid\n\n        Array.from(inputSourceElement.attributes).forEach(attr => {\n          if (attr.specified) {\n            authorSelect.setAttribute(attr.name, attr.value)\n\n            if (attr.name === 'autofocus') {\n              inputSourceElement.removeAttribute(attr.name)\n            }\n          }\n        })\n\n        authorSelect.inject(inputSourceElement, this.labels)\n\n        this.replaceChild(authorSelect, inputSourceElement)\n        this.PRIVATE.inputElement = authorSelect\n\n        // This is required for label clicks to focus author-select\n        this.labels.forEach(label => {\n          this.UTIL.registerListener(label, 'click', evt => this.PRIVATE.inputElement.focus())\n        })\n      }\n    })\n\n    this.UTIL.registerListeners(this, {\n      connected: () => this.PRIVATE.guid = this.UTIL.generateGuid('control_'),\n      rendered: () => {\n        Array.from(this.children).forEach(child => this.PRIVATE.catalogChild(child))\n        this.PRIVATE.init()\n      }\n    })\n  }\n\n  static get observedAttributes () {\n    return ['disabled']\n  }\n\n  get value () {\n    return this.input.value\n  }\n\n  set value (value) {\n    this.input.value = value\n  }\n\n  blur () {\n    this.input.blur()\n  }\n\n  checkValidity () {\n    this.input.checkValidity()\n  }\n\n  clear () {\n    if ('clear' in this.input) {\n      return this.input.clear()\n    }\n\n    this.input.value = ''\n  }\n\n  focus () {\n    this.input.focus()\n  }\n}\n\ncustomElements.define('author-control', AuthorFormControlElement)\n\nexport default AuthorFormControlElement\n"],"names":["AuthorFormControlElement","super","this","UTIL","defineAttributes","type","defineProperties","initialized","private","default","initialValue","labels","readonly","get","PRIVATE","labelElements","datalist","datalistElement","datalistSourceElement","input","inputElement","inputSourceElement","fieldInputTypes","toggleInputTypes","supportedTypes","definePrivateMethods","catalogChild","node","nodeName","htmlFor","guid","push","id","children","length","Array","from","forEach","child","init","value","customElements","initDefaultDatalist","initAuthorDatalist","indexOf","initDefaultSelect","initAuthorSelect","registerListener","evt","emit","selectedIndex","set","method","ref","args","authorDatalist","document","createElement","attributes","attr","specified","setAttribute","name","removeAttribute","removeChild","let","surrogate","option","add","inject","replaceChild","authorSelect","label","focus","registerListeners","connected","generateGuid","rendered","staticAccessors","observedAttributes","prototypeAccessors","blur","checkValidity","clear","AuthorBaseElement","HTMLElement","define"],"mappings":"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"}