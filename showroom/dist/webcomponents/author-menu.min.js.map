{"version":3,"file":"author-menu.min.js","sources":["../src/element.js"],"sourcesContent":["class AuthorMenuElement extends AuthorBaseElement(HTMLElement) {\n  constructor (templateString = null) {\n    super(templateString || `{{TEMPLATE-STRING}}`)\n\n    this.UTIL.defineProperties({\n      sourceForm: {\n        private: true,\n        default: null\n      },\n\n      form: {\n        readonly: true,\n        get: () => this.PRIVATE.sourceForm\n      },\n\n      hoveredIndex: {\n        readonly: true,\n        get: () => this.optionsElement.hoveredIndex\n      },\n\n      injected: {\n        private: true,\n        default: false\n      },\n\n      options: {\n        readonly: true,\n        get: () => this.optionsElement.displayOptions\n      },\n\n      optionsElement: {\n        readonly: true,\n        get: () => this.querySelector('author-options')\n      },\n\n      selectedOptions: {\n        readonly: true,\n        get: () => this.optionsElement ? this.optionsElement.selectedOptions : null\n      },\n\n      title: {\n        private: true,\n        default: ''\n      },\n\n      willValidate: {\n        readonly: true,\n        get: () => this.sourceElement.willValidate\n      },\n\n      validationMessage: {\n        readonly: true,\n        get: () => this.sourceElement.validationMessage\n      },\n\n      validity: {\n        readonly: true,\n        get: () => this.sourceElement.validity\n      }\n    })\n\n    this.UTIL.defineAttributes({\n      name: '',\n      placeholder: '',\n      autofocus: false,\n      disabled: false,\n      'force-open': false,\n      open: false,\n      required: false,\n\n      size: {\n        get: () => this.PRIVATE.throwSizeAttributeWarning(),\n        set: () => this.PRIVATE.throwSizeAttributeWarning()\n      }\n    })\n\n    this.UTIL.definePrivateMethods({\n      addOpenListeners: () => {\n        document.addEventListener('mousedown', this.PRIVATE.bodyMousedownHandler)\n        document.addEventListener('touchcancel', this.PRIVATE.bodyMousedownHandler)\n        document.addEventListener('touchend', this.PRIVATE.bodyMousedownHandler)\n      },\n\n      blurHandler: evt => this.off('keydown', this.PRIVATE.keydownHandler),\n\n      bodyMousedownHandler: evt => {\n        if (evt.target === this || this.contains(evt.target)) {\n          return\n        }\n\n        this.open = false\n      },\n\n      focusHandler: evt => this.on('keydown', this.PRIVATE.keydownHandler),\n\n      keydownHandler: evt => {\n        let startIndex = this.hoveredIndex > -1\n          ? this.hoveredIndex\n          : this.selectedIndex > -1\n            ? this.selectedIndex\n            : -1\n\n        switch (evt[this.keySource]) {\n          case 27:\n          case 'Escape':\n            this.open = false\n            return\n\n          case 13:\n          case 'Enter':\n          case 32:\n          case ' ':\n            evt.preventDefault()\n\n            if (!this.multiple) {\n              if (!this.open && (evt[this.keySource] === 32 || evt[this.keySource] === ' ')) {\n                this.open = true\n                return\n              }\n\n              if (this.hoveredIndex === this.selectedIndex || this.hoveredIndex === -1) {\n                this.open = false\n                return\n              }\n\n              this.selectedIndex = this.hoveredIndex\n            }\n\n            break\n\n          case 38:\n          case 'ArrowUp':\n            evt.preventDefault()\n\n            if (!this.multiple && !this.open) {\n              this.open = true\n              return\n            }\n\n            return this.emit('keydown.arrowUp', {\n              shiftKey: evt.shiftKey,\n              startIndex\n            }, this.optionsElement)\n\n          case 40:\n          case 'ArrowDown':\n            evt.preventDefault()\n\n            if (!this.multiple && !this.open) {\n              this.open = true\n              return\n            }\n\n            return this.emit('keydown.arrowDown', {\n              shiftKey: evt.shiftKey,\n              startIndex\n            }, this.optionsElement)\n\n          case 9:\n          case 'Tab':\n            this.open = false\n            break\n        }\n      },\n\n      optionSelectionHandler: evt => {\n        evt.stopPropagation()\n        // let { afterChange } = this.PRIVATE.middleware\n\n        this.dispatchEvent(new Event('change', {}))\n\n        if (this.open) {\n          this.removeAttribute('open')\n        }\n\n        // if (this.checkValidity()) {\n        //   this.removeAttribute('invalid')\n        // } else {\n        //   this.setAttribute('invalid', '')\n        // }\n\n        // if (afterChange && typeof afterChange === 'function') {\n        //   afterChange(evt.detail.previous, this.selectedOptions)\n        // }\n      },\n\n      removeOpenListeners: () => {\n        document.removeEventListener('mousedown', this.PRIVATE.bodyMousedownHandler)\n        document.removeEventListener('touchcancel', this.PRIVATE.bodyMousedownHandler)\n        document.removeEventListener('touchend', this.PRIVATE.bodyMousedownHandler)\n      },\n\n      stateChangeHandler: evt => {\n        let { name, value } = evt.detail\n\n        switch (name) {\n          case 'multiple':\n            value && this.removeAttribute('open')\n            return\n\n          case 'open':\n            if (this.multiple) {\n              this.optionsElement.unHoverAllOptions()\n              return this.removeAttribute('open')\n            }\n\n            if (value) {\n              if (!this.hasAttribute('open')) {\n                this.setAttribute('open', '')\n              }\n\n              return this.PRIVATE.addOpenListeners()\n            }\n\n            this.PRIVATE.removeOpenListeners()\n        }\n      },\n\n      throwSizeAttributeWarning: () => {\n        this.UTIL.printToConsole(`\"size\" attribute is not supported. Please use CSS to set the height of the options panel instead.`, 'warning')\n      },\n\n      toggleHandler: evt => this.open = !this.open//,\n\n      // validationHandler: evt => this.emit('invalid')\n    })\n\n    this.UTIL.registerListeners(this, {\n      'attribute.change': evt => {\n        let { attribute, oldValue, newValue } = evt.detail\n\n        if (newValue === oldValue) {\n          return\n        }\n\n        switch (attribute) {\n          case 'force-open': return this.emit('state.change', {\n            name: 'open',\n            value: true\n          })\n\n          case 'open': return this.emit('state.change', {\n            name: 'open',\n            value: this.hasAttribute('open') || this.hasAttribute('force-open')\n          })\n\n          case 'size': return this.PRIVATE.throwSizeAttributeWarning()\n        }\n      },\n\n      // connected: () => {\n      //   this.sourceElement.addEventListener('invalid', this.PRIVATE.validationHandler)\n      //\n      //   if (!this.checkValidity()) {\n      //     this.setAttribute('invalid', '')\n      //   }\n      // },\n\n      // disconnected: () => {\n      //   this.sourceElement.removeEventListener('invalid', this.PRIVATE.validationHandler)\n      // },\n\n      blur: this.PRIVATE.blurHandler,\n      focus: this.PRIVATE.focusHandler,\n      'options.selected': this.PRIVATE.optionSelectionHandler,\n      'state.change': this.PRIVATE.stateChangeHandler,\n      toggle: this.PRIVATE.toggleHandler,\n\n      rendered: () => {\n        if (!this.hasAttribute('tabindex')) {\n          this.setAttribute('tabindex', 0)\n        }\n\n        this.autofocus && this.focus()\n      }\n    })\n  }\n\n  static get observedAttributes () {\n    return ['autofocus', 'disabled', 'force-open', 'name', 'open', 'placeholder', 'tabindex', 'size']\n  }\n\n  get length () {\n    return this.options.length\n  }\n\n  get selectedIndex () {\n    return this.optionsElement ? this.optionsElement.selectedIndex : -1\n  }\n\n  set selectedIndex (index) {\n    if (index < 0) {\n      return this.deselectAll()\n    }\n\n    this.optionsElement.selectedIndex = index\n  }\n\n  get value () {\n    if (this.selectedOptions.length === 0) {\n      return null\n    }\n\n    let selectedOption = this.selectedOptions.item(0)\n    return selectedOption ? selectedOption.value || selectedOption.text : null\n  }\n\n  add (option, index) {\n    this.optionsElement.addOption(option, index)\n  }\n\n  addFilter (key, func) {\n    this.optionsElement.addFilter(key, func)\n  }\n\n  hasFilter (key) {\n    return this.optionsElement.hasFilter(key)\n  }\n\n  removeAllFilters () {\n    this.optionsElement.removeAllFilters()\n  }\n\n  removeFilter () {\n    this.optionsElement.removeFilter(key)\n  }\n\n  checkValidity () {\n    return this.sourceElement.checkValidity()\n  }\n\n  clear () {\n    this.optionsElement.clear()\n  }\n\n  deselectAll () {\n    this.optionsElement.deselectAll()\n  }\n\n  inject (sourceElement, labels = null) {\n    // Prevent re-injections\n    if (this.PRIVATE.injected) {\n      return\n    }\n\n    this.PRIVATE.sourceForm = sourceElement.form\n\n    if (this.PRIVATE.sourceForm !== null) {\n      this.UTIL.registerListeners(this.PRIVATE.sourceForm, {\n        reset: evt => this.deselectAll()\n      })\n    }\n\n    this.UTIL.defineProperty('sourceElement', {\n      readonly: true,\n      default: sourceElement\n    })\n\n    let optionsElement = document.createElement('author-options')\n    optionsElement.slot = 'options'\n\n    if (labels) {\n      this.UTIL.defineProperty('labels', {\n        private: true,\n        default: labels\n      })\n    }\n\n    this.appendChild(optionsElement)\n\n    if (sourceElement.children.length > 0) {\n      if (!this.multiple) {\n        Array.from(sourceElement.children).forEach(option => {\n          if (option.index !== sourceElement.selectedIndex) {\n            option.removeAttribute('selected')\n          }\n        })\n      }\n\n      this.optionsElement.addOptions(sourceElement.children)\n    }\n\n    this.PRIVATE.injected = true\n  }\n\n  item (index) {\n    return this.optionsElement.item(index)\n  }\n\n  namedItem (id) {\n    return this.optionsElement.namedItem(id)\n  }\n\n  /**\n   * method querySelector\n   * @param  {string} selector\n   * @return {HTMLElement}\n   * @override\n   */\n  querySelector (selector) {\n    if (!selector.includes(':checked')) {\n      return super.querySelector(selector)\n    }\n\n    return this.selectedOptions.length > 0 ? this.selectedOptions[0] : null\n  }\n\n  /**\n   * method querySelectorAll\n   * @param  {string} selector\n   * @return {NodeList}\n   * @override\n   */\n  querySelectorAll (selector) {\n    if (!selector.includes(':checked')) {\n      return super.querySelectorAll(selector)\n    }\n\n    return this.optionsElement.querySelectorAll('[selected]')\n  }\n\n  remove (index = null) {\n    if (index === null) {\n      return super.remove()\n    }\n\n    this.optionsElement.removeOptionByIndex(index)\n  }\n\n  reportValidity () {\n    let isValid = this.sourceElement.checkValidity()\n\n    if (isValid) {\n      this.removeAttribute('invalid')\n    } else {\n      this.setAttribute('invalid', '')\n    }\n  }\n\n  setCustomValidity (string) {\n    this.sourceElement.setCustomValidity(string)\n  }\n}\n\ncustomElements.define('author-menu', AuthorMenuElement)\n\nexport default AuthorMenuElement\n"],"names":["AuthorMenuElement","AuthorBaseElement","HTMLElement","[object Object]","templateString","super","this","UTIL","defineProperties","sourceForm","private","default","form","readonly","get","PRIVATE","hoveredIndex","optionsElement","injected","options","displayOptions","querySelector","selectedOptions","title","willValidate","sourceElement","validationMessage","validity","defineAttributes","name","placeholder","autofocus","disabled","force-open","open","required","size","throwSizeAttributeWarning","set","definePrivateMethods","addOpenListeners","document","addEventListener","bodyMousedownHandler","blurHandler","evt","off","keydownHandler","target","contains","focusHandler","on","startIndex","selectedIndex","keySource","preventDefault","multiple","emit","shiftKey","optionSelectionHandler","stopPropagation","dispatchEvent","Event","removeAttribute","removeOpenListeners","removeEventListener","stateChangeHandler","value","detail","unHoverAllOptions","hasAttribute","setAttribute","printToConsole","toggleHandler","registerListeners","attribute.change","attribute","oldValue","newValue","blur","focus","options.selected","state.change","toggle","rendered","observedAttributes","length","index","deselectAll","selectedOption","item","text","option","addOption","key","func","addFilter","hasFilter","removeAllFilters","removeFilter","checkValidity","clear","labels","reset","defineProperty","createElement","slot","appendChild","children","Array","from","forEach","addOptions","id","namedItem","selector","includes","querySelectorAll","remove","removeOptionByIndex","string","setCustomValidity","customElements","define"],"mappings":"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"}