{"version":3,"file":"author-slider.min.js","sources":["../src/element.js"],"sourcesContent":["class AuthorSliderElement extends AuthorBaseElement(HTMLElement) {\n  constructor () {\n    super(`{{TEMPLATE-STRING}}`)\n\n    this.UTIL.defineProperties({\n      defaultAxis: {\n        private: true,\n        readonly: true,\n        default: 'x'\n      },\n\n      dimensions: {\n        private: true,\n        readonly: true,\n        get: () => this.getBoundingClientRect()\n      },\n\n      handles: {\n        private: true,\n        readonly: true,\n        get: () => this.querySelectorAll('author-slider-handle')\n      },\n\n      validAxisValues: {\n        private: true,\n        readonly: true,\n        default: ['x', 'y', '*']\n      },\n\n      currentPosition: {\n        private: true,\n        default: {\n          x: 0,\n          y: 0\n        }\n      },\n\n      position: {\n        private: true,\n        default: {\n          x: 0,\n          y: 0\n        }\n      },\n\n      previousPosition: {\n        private: true,\n        default: {\n          x: 0,\n          y: 0\n        }\n      }\n    })\n\n    this.UTIL.defineAttributes({\n      axis: this.PRIVATE.defaultAxis\n    })\n\n    this.UTIL.definePrivateMethods({\n      generateCoordinates: (getX, getY) => {\n        switch (this.axis) {\n          case '*': return {\n            x: getX(),\n            y: getY()\n          }\n\n          case 'x': return {\n            x: getX(),\n            y: null\n          }\n\n          case 'y': return {\n            x: null,\n            y: getY()\n          }\n\n          default: return this.UTIL.throwError({\n            message: !this.axis\n              ? 'No axis specified'\n              : `Invalid axis \"${this.axis}\"`\n          })\n        }\n      },\n\n      generatePositionObject: (position = this.PRIVATE.position) => {\n        let { dimensions } = this.PRIVATE\n\n        let getXPos = () => ({\n          px: position.x,\n          pct: this.UTIL.getPercentageDecimal(position.x, dimensions.width)\n        })\n\n        let getYPos = () => ({\n          px: position.y,\n          pct: this.UTIL.getPercentageDecimal(position.y, dimensions.height)\n        })\n\n        return this.PRIVATE.generateCoordinates(getXPos, getYPos)\n      },\n\n      getRelativePosition: evt => {\n        let { top, left, width, height } = this.PRIVATE.dimensions\n\n        let getXPos = () => Math.min(Math.max(evt.pageX - left - pageXOffset, 0), width)\n        let getYPos = () => Math.min(Math.max(evt.pageY - top - pageYOffset, 0), height)\n\n        return this.PRIVATE.generateCoordinates(getXPos, getYPos)\n      },\n\n      pointermoveHandler: evt => {\n        if (evt.buttons < 1) {\n          return\n        }\n\n        document.addEventListener('pointerup', this.PRIVATE.pointerupHandler)\n\n        let { handles } = this.PRIVATE\n        let relative = this.PRIVATE.getRelativePosition(evt)\n\n        if ((!this.position.x || relative.x !== this.position.x.px) || (!this.position.y || relative.y !== this.position.y.px)) {\n          this.PRIVATE.currentPosition = relative\n          let position = this.PRIVATE.generatePositionObject(this.PRIVATE.currentPosition)\n\n          if (handles.length !== 0) {\n            handles.item(0).position = position\n          }\n\n          this.emit('slide', position)\n        }\n      },\n\n      pointerupHandler: evt => {\n        let { currentPosition, handles, pointermoveHandler, pointerupHandler } = this.PRIVATE\n        let reposition = true\n\n        this.PRIVATE.position = currentPosition\n\n        if (handles.length > 1) {\n          reposition = false\n        } else if (handles.length !== 0) {\n          handles.item(0).position = this.position\n        }\n\n        if (reposition) {\n          this.emit('change', {\n            previous: this.previousPosition,\n            position: this.position\n          })\n\n          this.PRIVATE.previousPosition = currentPosition\n        }\n\n        document.removeEventListener('pointermove', pointermoveHandler)\n        document.removeEventListener('pointerup', pointerupHandler)\n      },\n    })\n\n    this.UTIL.registerListeners(this, {\n      'attribute.change': evt => {\n        let { attribute, oldValue, newValue } = evt.detail\n\n        if (newValue === oldValue) {\n          return\n        }\n\n        let { defaultAxis, validAxisValues } = this.PRIVATE\n\n        switch (attribute) {\n          case 'axis':\n            let arr = newValue.split(' ').filter(axis => validAxisValues.includes(axis))\n\n            if (!arr.length) {\n              this.setAttribute('axis', defaultAxis)\n\n              return this.UTIL.throwError({\n                message: `Invalid axis \"${newValue}\". Valid values include any combination of the following, separated by spaces: \"${validAxisValues.join('\", \"')}\"`\n              })\n            }\n\n            break\n        }\n      },\n\n      pointerdown: evt => {\n        let previous = this.PRIVATE.position\n        let reposition = true\n        this.PRIVATE.position = this.PRIVATE.getRelativePosition(evt)\n\n        let { handles, position, pointermoveHandler } = this.PRIVATE\n\n        if (handles.length > 1) {\n          reposition = false\n        } else if (handles.length !== 0) {\n          handles.item(0).position = this.position\n        }\n\n        if (reposition) {\n          this.emit('change', {\n            previous: this.PRIVATE.generatePositionObject(previous),\n            position: this.position\n          })\n\n          document.addEventListener('pointermove', this.PRIVATE.pointermoveHandler)\n        }\n      }\n    })\n  }\n\n  static get observedAttributes () {\n    return ['axis']\n  }\n\n  get previousPosition () {\n    return this.PRIVATE.generatePositionObject(this.PRIVATE.previousPosition)\n  }\n\n  get position () {\n    return this.PRIVATE.generatePositionObject(this.PRIVATE.position)\n  }\n}\n\ncustomElements.define('author-slider', AuthorSliderElement)\n\nexport default AuthorSliderElement\n"],"names":["AuthorSliderElement","AuthorBaseElement","HTMLElement","[object Object]","super","this","UTIL","defineProperties","defaultAxis","private","readonly","default","dimensions","get","getBoundingClientRect","handles","querySelectorAll","validAxisValues","currentPosition","x","y","position","previousPosition","defineAttributes","axis","PRIVATE","definePrivateMethods","generateCoordinates","getX","getY","throwError","message","generatePositionObject","px","pct","getPercentageDecimal","width","height","getRelativePosition","evt","top","left","Math","min","max","pageX","pageXOffset","pageY","pageYOffset","pointermoveHandler","buttons","document","addEventListener","pointerupHandler","relative","length","item","emit","reposition","previous","removeEventListener","registerListeners","attribute.change","attribute","oldValue","newValue","detail","split","filter","includes","setAttribute","join","pointerdown","observedAttributes","customElements","define"],"mappings":"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"}