{"version":3,"file":"author-menu.es5.min.js","sources":["../src/element.js"],"sourcesContent":["class AuthorMenuElement extends AuthorBaseElement(HTMLElement) {\n  constructor (templateString = null) {\n    super(templateString || `{{TEMPLATE-STRING}}`)\n\n    this.UTIL.defineProperties({\n      sourceForm: {\n        private: true,\n        default: null\n      },\n\n      form: {\n        readonly: true,\n        get: () => this.PRIVATE.sourceForm\n      },\n\n      hoveredIndex: {\n        readonly: true,\n        get: () => this.optionsElement.hoveredIndex\n      },\n\n      injected: {\n        private: true,\n        default: false\n      },\n\n      options: {\n        readonly: true,\n        get: () => this.optionsElement.displayOptions\n      },\n\n      optionsElement: {\n        readonly: true,\n        get: () => this.querySelector('author-options')\n      },\n\n      selectedOptions: {\n        readonly: true,\n        get: () => this.optionsElement ? this.optionsElement.selectedOptions : null\n      },\n\n      title: {\n        private: true,\n        default: ''\n      },\n\n      willValidate: {\n        readonly: true,\n        get: () => this.sourceElement.willValidate\n      },\n\n      validationMessage: {\n        readonly: true,\n        get: () => this.sourceElement.validationMessage\n      },\n\n      validity: {\n        readonly: true,\n        get: () => this.sourceElement.validity\n      }\n    })\n\n    this.UTIL.defineAttributes({\n      name: '',\n      placeholder: '',\n      autofocus: false,\n      disabled: false,\n      'force-open': false,\n      open: false,\n      required: false,\n\n      size: {\n        get: () => this.PRIVATE.throwSizeAttributeWarning(),\n        set: () => this.PRIVATE.throwSizeAttributeWarning()\n      }\n    })\n\n    this.UTIL.definePrivateMethods({\n      addOpenListeners: () => {\n        document.addEventListener('mousedown', this.PRIVATE.bodyMousedownHandler)\n        document.addEventListener('touchcancel', this.PRIVATE.bodyMousedownHandler)\n        document.addEventListener('touchend', this.PRIVATE.bodyMousedownHandler)\n      },\n\n      blurHandler: evt => this.off('keydown', this.PRIVATE.keydownHandler),\n\n      bodyMousedownHandler: evt => {\n        if (evt.target === this || this.contains(evt.target)) {\n          return\n        }\n\n        this.open = false\n      },\n\n      focusHandler: evt => this.on('keydown', this.PRIVATE.keydownHandler),\n\n      keydownHandler: evt => {\n        let startIndex = this.hoveredIndex > -1\n          ? this.hoveredIndex\n          : this.selectedIndex > -1\n            ? this.selectedIndex\n            : -1\n\n        switch (evt[this.keySource]) {\n          case 27:\n          case 'Escape':\n            this.open = false\n            return\n\n          case 13:\n          case 'Enter':\n          case 32:\n          case ' ':\n            evt.preventDefault()\n\n            if (!this.multiple) {\n              if (!this.open && (evt[this.keySource] === 32 || evt[this.keySource] === ' ')) {\n                this.open = true\n                return\n              }\n\n              if (this.hoveredIndex === this.selectedIndex || this.hoveredIndex === -1) {\n                this.open = false\n                return\n              }\n\n              this.selectedIndex = this.hoveredIndex\n            }\n\n            break\n\n          case 38:\n          case 'ArrowUp':\n            evt.preventDefault()\n\n            if (!this.multiple && !this.open) {\n              this.open = true\n              return\n            }\n\n            return this.emit('keydown.arrowUp', {\n              shiftKey: evt.shiftKey,\n              startIndex\n            }, this.optionsElement)\n\n          case 40:\n          case 'ArrowDown':\n            evt.preventDefault()\n\n            if (!this.multiple && !this.open) {\n              this.open = true\n              return\n            }\n\n            return this.emit('keydown.arrowDown', {\n              shiftKey: evt.shiftKey,\n              startIndex\n            }, this.optionsElement)\n\n          case 9:\n          case 'Tab':\n            this.open = false\n            break\n        }\n      },\n\n      optionSelectionHandler: evt => {\n        evt.stopPropagation()\n        // let { afterChange } = this.PRIVATE.middleware\n\n        this.dispatchEvent(new Event('change', {}))\n\n        if (this.open) {\n          this.removeAttribute('open')\n        }\n\n        // if (this.checkValidity()) {\n        //   this.removeAttribute('invalid')\n        // } else {\n        //   this.setAttribute('invalid', '')\n        // }\n\n        // if (afterChange && typeof afterChange === 'function') {\n        //   afterChange(evt.detail.previous, this.selectedOptions)\n        // }\n      },\n\n      removeOpenListeners: () => {\n        document.removeEventListener('mousedown', this.PRIVATE.bodyMousedownHandler)\n        document.removeEventListener('touchcancel', this.PRIVATE.bodyMousedownHandler)\n        document.removeEventListener('touchend', this.PRIVATE.bodyMousedownHandler)\n      },\n\n      stateChangeHandler: evt => {\n        let { name, value } = evt.detail\n\n        switch (name) {\n          case 'multiple':\n            value && this.removeAttribute('open')\n            return\n\n          case 'open':\n            if (this.multiple) {\n              this.optionsElement.unHoverAllOptions()\n              return this.removeAttribute('open')\n            }\n\n            if (value) {\n              if (!this.hasAttribute('open')) {\n                this.setAttribute('open', '')\n              }\n\n              return this.PRIVATE.addOpenListeners()\n            }\n\n            this.PRIVATE.removeOpenListeners()\n        }\n      },\n\n      throwSizeAttributeWarning: () => {\n        this.UTIL.printToConsole(`\"size\" attribute is not supported. Please use CSS to set the height of the options panel instead.`, 'warning')\n      },\n\n      toggleHandler: evt => this.open = !this.open//,\n\n      // validationHandler: evt => this.emit('invalid')\n    })\n\n    this.UTIL.registerListeners(this, {\n      'attribute.change': evt => {\n        let { attribute, oldValue, newValue } = evt.detail\n\n        if (newValue === oldValue) {\n          return\n        }\n\n        switch (attribute) {\n          case 'force-open': return this.emit('state.change', {\n            name: 'open',\n            value: true\n          })\n\n          case 'open': return this.emit('state.change', {\n            name: 'open',\n            value: this.hasAttribute('open') || this.hasAttribute('force-open')\n          })\n\n          case 'size': return this.PRIVATE.throwSizeAttributeWarning()\n        }\n      },\n\n      // connected: () => {\n      //   this.sourceElement.addEventListener('invalid', this.PRIVATE.validationHandler)\n      //\n      //   if (!this.checkValidity()) {\n      //     this.setAttribute('invalid', '')\n      //   }\n      // },\n\n      // disconnected: () => {\n      //   this.sourceElement.removeEventListener('invalid', this.PRIVATE.validationHandler)\n      // },\n\n      blur: this.PRIVATE.blurHandler,\n      focus: this.PRIVATE.focusHandler,\n      'options.selected': this.PRIVATE.optionSelectionHandler,\n      'state.change': this.PRIVATE.stateChangeHandler,\n      toggle: this.PRIVATE.toggleHandler,\n\n      rendered: () => {\n        if (!this.hasAttribute('tabindex')) {\n          this.setAttribute('tabindex', 0)\n        }\n\n        this.autofocus && this.focus()\n      }\n    })\n  }\n\n  static get observedAttributes () {\n    return ['autofocus', 'disabled', 'force-open', 'name', 'open', 'placeholder', 'tabindex', 'size']\n  }\n\n  get length () {\n    return this.options.length\n  }\n\n  get selectedIndex () {\n    return this.optionsElement ? this.optionsElement.selectedIndex : -1\n  }\n\n  set selectedIndex (index) {\n    if (index < 0) {\n      return this.deselectAll()\n    }\n\n    this.optionsElement.selectedIndex = index\n  }\n\n  get value () {\n    if (this.selectedOptions.length === 0) {\n      return null\n    }\n\n    let selectedOption = this.selectedOptions.item(0)\n    return selectedOption ? selectedOption.value || selectedOption.text : null\n  }\n\n  add (option, index) {\n    this.optionsElement.addOption(option, index)\n  }\n\n  addFilter (key, func) {\n    this.optionsElement.addFilter(key, func)\n  }\n\n  hasFilter (key) {\n    return this.optionsElement.hasFilter(key)\n  }\n\n  removeAllFilters () {\n    this.optionsElement.removeAllFilters()\n  }\n\n  removeFilter () {\n    this.optionsElement.removeFilter(key)\n  }\n\n  checkValidity () {\n    return this.sourceElement.checkValidity()\n  }\n\n  clear () {\n    this.optionsElement.clear()\n  }\n\n  deselectAll () {\n    this.optionsElement.deselectAll()\n  }\n\n  inject (sourceElement, labels = null) {\n    // Prevent re-injections\n    if (this.PRIVATE.injected) {\n      return\n    }\n\n    this.PRIVATE.sourceForm = sourceElement.form\n\n    if (this.PRIVATE.sourceForm !== null) {\n      this.UTIL.registerListeners(this.PRIVATE.sourceForm, {\n        reset: evt => this.deselectAll()\n      })\n    }\n\n    this.UTIL.defineProperty('sourceElement', {\n      readonly: true,\n      default: sourceElement\n    })\n\n    let optionsElement = document.createElement('author-options')\n    optionsElement.slot = 'options'\n\n    if (labels) {\n      this.UTIL.defineProperty('labels', {\n        private: true,\n        default: labels\n      })\n    }\n\n    this.appendChild(optionsElement)\n\n    if (sourceElement.children.length > 0) {\n      if (!this.multiple) {\n        Array.from(sourceElement.children).forEach(option => {\n          if (option.index !== sourceElement.selectedIndex) {\n            option.removeAttribute('selected')\n          }\n        })\n      }\n\n      this.optionsElement.addOptions(sourceElement.children)\n    }\n\n    this.PRIVATE.injected = true\n  }\n\n  item (index) {\n    return this.optionsElement.item(index)\n  }\n\n  namedItem (id) {\n    return this.optionsElement.namedItem(id)\n  }\n\n  /**\n   * method querySelector\n   * @param  {string} selector\n   * @return {HTMLElement}\n   * @override\n   */\n  querySelector (selector) {\n    if (!selector.includes(':checked')) {\n      return super.querySelector(selector)\n    }\n\n    return this.selectedOptions.length > 0 ? this.selectedOptions[0] : null\n  }\n\n  /**\n   * method querySelectorAll\n   * @param  {string} selector\n   * @return {NodeList}\n   * @override\n   */\n  querySelectorAll (selector) {\n    if (!selector.includes(':checked')) {\n      return super.querySelectorAll(selector)\n    }\n\n    return this.optionsElement.querySelectorAll('[selected]')\n  }\n\n  remove (index = null) {\n    if (index === null) {\n      return super.remove()\n    }\n\n    this.optionsElement.removeOptionByIndex(index)\n  }\n\n  reportValidity () {\n    let isValid = this.sourceElement.checkValidity()\n\n    if (isValid) {\n      this.removeAttribute('invalid')\n    } else {\n      this.setAttribute('invalid', '')\n    }\n  }\n\n  setCustomValidity (string) {\n    this.sourceElement.setCustomValidity(string)\n  }\n}\n\ncustomElements.define('author-menu', AuthorMenuElement)\n\nexport default AuthorMenuElement\n"],"names":["AuthorMenuElement","templateString","UTIL","defineProperties","sourceForm","private","default","form","readonly","get","_this","PRIVATE","hoveredIndex","optionsElement","injected","options","displayOptions","querySelector","selectedOptions","title","willValidate","sourceElement","validationMessage","validity","defineAttributes","name","placeholder","autofocus","disabled","open","required","size","throwSizeAttributeWarning","set","definePrivateMethods","addOpenListeners","document","addEventListener","bodyMousedownHandler","blurHandler","evt","off","keydownHandler","target","contains","focusHandler","on","startIndex","selectedIndex","keySource","preventDefault","multiple","emit","shiftKey","optionSelectionHandler","stopPropagation","dispatchEvent","Event","removeAttribute","removeOpenListeners","removeEventListener","stateChangeHandler","detail","value","unHoverAllOptions","hasAttribute","setAttribute","printToConsole","toggleHandler","registerListeners","attribute","oldValue","newValue","blur","focus","toggle","rendered","AuthorBaseElement","HTMLElement","option","index","addOption","key","func","addFilter","this","hasFilter","removeAllFilters","removeFilter","checkValidity","clear","deselectAll","labels","reset","_this2","defineProperty","createElement","slot","appendChild","children","length","Array","from","forEach","addOptions","item","id","namedItem","selector","includes","querySelectorAll","removeOptionByIndex","string","setCustomValidity","selectedOption","text","customElements","define"],"mappings":"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"}